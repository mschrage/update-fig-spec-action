"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.specTransformer = void 0;
var typescript_1 = require("typescript");
// The name of the spec variable
var SPEC_NAME = "completionSpec";
var EXPORT_KEYWORD = typescript_1.SyntaxKind.ExportKeyword;
/**
 * The TypeScript transformer to rename the export spec variable name to SPEC_NAME,
 * and remove the export keyword.
 *
 * @param context The current context
 */
var specTransformer = function (context) { return function (sourceFile) {
    var updated = false;
    var visitor = function (node) {
        if (!updated && (0, typescript_1.isVariableStatement)(node)) {
            var _a = node, declarationList = _a.declarationList, modifiers = _a.modifiers;
            // Only process if there is a modifier, and if this modifier
            // is an export.
            if (modifiers && modifiers.length === 1 && modifiers[0].kind === EXPORT_KEYWORD) {
                var variableNode = declarationList.declarations[0];
                updated = true;
                // Update the variable name to SPEC_NAME
                var newVariableNode = (0, typescript_1.updateVariableDeclaration)(variableNode, typescript_1.factory.createIdentifier(SPEC_NAME), variableNode.type, variableNode.initializer);
                var newDeclarationlist = (0, typescript_1.updateVariableDeclarationList)(declarationList, [
                    newVariableNode,
                ]);
                // Remove the export keyword
                return (0, typescript_1.updateVariableStatement)(node, [], newDeclarationlist);
            }
        }
        return (0, typescript_1.visitEachChild)(node, visitor, context);
    };
    return (0, typescript_1.visitNode)(sourceFile, visitor);
}; };
exports.specTransformer = specTransformer;
